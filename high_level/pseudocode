Round_state; (1, 2, or 3)
first_color;

deposit_if_enough(color c)
	Checks if we have all the tokens of that color
	If we do, do the correct deposit maneuver based on our position and drop the tokens
	Return to the initial position

We can use fastest path stuff etc

Round 1:
Inventory set to 12, 2 of each color, except grey
if (first_color == yellow)
//First collect all the tokens on the field
	Turn left 45 degrees
	Follow line diagonally, checking for tokens, until you reach the last space on the diagonal (8 spots per diagonal)
	deposit_if_enough(red)
	Turn left 135 degrees
	Forward until + intersection
	deposit_if_enough(green)
	Turn left 90 degrees
	Follow line straight across, checking for tokens, until you reach the last space (8 more spots)
	deposit_if_enough(magenta)
	 Turn left 90 degrees
	Forward till intersection
	deposit_if_enough(cyan)
	Turn left 135 degrees
	Follow line diagonally, checking for tokens, until you reach the last space on the diagonal (8 spots per diagonal)
	deposit_if_enough(blue) //we should have collected all the tokens on the field by here

//We will end at the dark blue square
	
//Deposit the tokens
	Follow the outline of the outer square, whenever we get near a color(hit an intersection) run deposit_if_enough(color) if time > 30 sec
	Once you deposit at the last color (Yellow) follow the edge of the outer square from yellow to dark blue halfway and turn left and pull into the start area

OR

	Return to the center by backing up
if(time > 30 sec)
		Follow a line to each of the squares we need to deposit at returning to the center each time
Else
		Return to home square

Else //first_color is red
//First collect all the tokens on the field
	Turn left 45 degrees
	Follow line diagonally, checking for tokens, until you reach the last space on the diagonal (8 spots per diagonal)
	deposit_if_enough(yellow)
	Turn left 135 degrees
	Forward until + intersection
	deposit_if_enough(magenta)
	Turn left 90 degrees
	Follow line straight across, checking for tokens, until you reach the last space (8 more spots)
	deposit_if_enough(green)
	 Turn left 90 degrees
	Forward till intersection
	deposit_if_enough(dark blue)
	Turn left 135 degrees
	Follow line diagonally, checking for tokens, until you reach the last space on the diagonal (8 spots per diagonal)
	deposit_if_enough(cyan) //we should have collected all the tokens on the field by here
//We will end at the cyan square
	
//Deposit the tokens
	Follow the outline of the outer square, whenever we get near a color(hit an intersection) run deposit_if_enough(color) if time > 30 sec
	Once you deposit at the last color (Yellow) follow the edge of the outer square from yellow to dark blue halfway and turn left and pull into the start area

OR

	Return to the center by backing up
if(time > 30 sec)
		Follow a line to each of the squares we need to deposit at returning to the center each time
Else
		Return to home square

Round 2:
Inventory set to 18 tokens, with 3 of each color
Repeat same algorithm as round 1

Round 3:
Set inventory to 24 tokens, with 3 of each color and 6 grey
Repeat same algorithm as round 1 and 2 (don't return to starting location)
We can adjust deposity_if_enough to drop if we have 2 out of the 3 tokens to speed up the process

After depositing all the other tokens or if we 40 sec deposit the grey tokens and return to the starting square